
  Agenda - AWS Glue
  ----------------------------   
   1. PySpark & SparkSQL
   2. AWS Basics & AWS Infra		
   3. Amazon S3				
   4. AWS Lambda			
   5. AWS Glue				
   6. AWS Athena 			
   7. Project (CDC)


  Course Materials
  ----------------
    -> PDF Presentations
    -> Code Modules, Instructions, Scripts, Notebooks, Datasets
    -> Class Notes
    -> Github: https://github.com/ykanakaraju/awsglue 


  Spark
  ----- 

   -> Spark is an in-memory distributed computing framework for performing big data analytics.

   -> Spark is written in SCALA language

   -> Spark is a polyglot
	-> Scala, Java, Python, R (and SQL)

   -> Spark has unified stack for data analytics

   -> Spark APIs
	-> Spark Core API  : Low-level API. Uses RDDs
	-> Spark SQL	   : Structured/semi-structured data processing (Batch)
	-> Spark Streaming : DStreams API, Structured streaming
	-> Spark MLLib	   : Predictive analytics using ML
	-> Spark GraphX	   : Graph Processing   

    -> Spark can run on multiple cluster managers
	-> local, Spark standalone, YARN, Mesos, Kubernetes 



   Spark Architecture
   ------------------

    	1. Cluster Manager (CM)
		-> Applications are submitted to CMs
		-> Allocates containers for lauching driver and executors on the cluster. 
		-> Spark supports multiple CMs
			-> local, standalone, YARN, Mesos, Kubernetes		

	2. Driver
		-> Master process
		-> Runs the 'SparkContext' object
		-> Manages the user code and sends the tasks to the executors as per the code. 

		Deploy Modes:
		-> Where to run the driver process
		1. Client : default, driver runs on the client. 
		2. Cluster: driver runs on one of the nodes on the cluster.

	3. SparkContext
		-> Is an application context
		-> Starting point of execution
		-> Is the link between the driver and tasks running on the executors

	4. Executors
		-> receives the tasks from the Driver
		-> all tasks run the same execution code but on different partitions of the data
		-> the status of tasks are reported to the driver. 

	



